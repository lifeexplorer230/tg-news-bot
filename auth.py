#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram"""
import asyncio
import sys
from telethon import TelegramClient
from utils.config import load_config

async def authorize():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram"""
    config = load_config()

    client = TelegramClient(
        config.get('telegram.session_name', 'marketplace_bot_session'),
        config.telegram_api_id,
        config.telegram_api_hash
    )

    await client.connect()

    if not await client.is_user_authorized():
        print(f"üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ {config.telegram_phone}")
        await client.send_code_request(config.telegram_phone)

        print("‚úâÔ∏è –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram:")
        code = input("–ö–æ–¥: ").strip()

        try:
            await client.sign_in(config.telegram_phone, code)
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            if "password" in str(e).lower() or "2fa" in str(e).lower():
                print("üîê –¢—Ä–µ–±—É–µ—Ç—Å—è 2FA –ø–∞—Ä–æ–ª—å")
                password = input("–ü–∞—Ä–æ–ª—å 2FA: ").strip()
                await client.sign_in(password=password)
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å 2FA —É—Å–ø–µ—à–Ω–∞!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                raise
    else:
        print("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")

    me = await client.get_me()
    print(f"üë§ –í–æ—à–ª–∏ –∫–∞–∫: {me.first_name} (@{me.username})")

    await client.disconnect()

if __name__ == "__main__":
    asyncio.run(authorize())
