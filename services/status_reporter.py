"""–°–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –≤ Telegram –≥—Ä—É–ø–ø—É"""
import asyncio
from datetime import datetime
from telethon import TelegramClient
from utils.logger import setup_logger

logger = setup_logger(__name__)


class StatusReporter:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""

    def __init__(self, config, db):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Status Reporter

        Args:
            config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
            db: Database instance
        """
        self.config = config
        self.db = db
        self.status_chat = config.get('status.chat', 'Soft Status')
        self.bot_name = config.get('status.bot_name', 'Marketplace News Bot')

    async def send_status(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –≥—Ä—É–ø–ø—É"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            stats = self.db.get_today_stats()

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            now = datetime.now()
            time_str = now.strftime("%H:%M:%S")
            date_str = now.strftime("%d.%m.%Y")

            message = f"ü§ñ **{self.bot_name} - –°—Ç–∞—Ç—É—Å –Ω–∞ {time_str}**\n\n"
            message += f"üìÖ –î–∞—Ç–∞: {date_str}\n\n"
            message += f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**\n"
            message += f"   üì• –°–æ–±—Ä–∞–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {stats['messages_today']}\n"
            message += f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['processed_today']}\n"
            message += f"   üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {stats['published_today']}\n"
            message += f"   ‚è≥ –í –æ—á–µ—Ä–µ–¥–∏: {stats['unprocessed']}\n\n"
            message += f"üìà **–ö–∞–Ω–∞–ª—ã:**\n"
            message += f"   üîó –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {stats['active_channels']}\n\n"
            message += f"‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram —Å –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–µ–π –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
            # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç "database is locked" –∫–æ–≥–¥–∞ listener –∞–∫—Ç–∏–≤–µ–Ω
            status_session = self.config.get('telegram.session_name') + '_status'
            client = TelegramClient(
                status_session,
                self.config.telegram_api_id,
                self.config.telegram_api_hash
            )

            await client.start(phone=self.config.telegram_phone)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await client.send_message(self.status_chat, message)

            logger.info(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {self.status_chat}")

            await client.disconnect()

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}", exc_info=True)


async def run_status_reporter(config, db):
    """
    –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∞—Ç—É—Å–∞

    Args:
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        db: Database instance
    """
    reporter = StatusReporter(config, db)
    await reporter.send_status()
