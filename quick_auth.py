#!/usr/bin/env python3
"""–ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∫–æ–¥–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º"""
import asyncio
import sys
from telethon import TelegramClient
from utils.config import load_config

async def quick_auth(code: str, password: str = None):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –≥–æ—Ç–æ–≤—ã–º –∫–æ–¥–æ–º"""
    config = load_config()

    client = TelegramClient(
        config.get('telegram.session_name', 'marketplace_bot_session'),
        config.telegram_api_id,
        config.telegram_api_hash
    )

    await client.connect()

    if not await client.is_user_authorized():
        print(f"üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ {config.telegram_phone}")
        await client.send_code_request(config.telegram_phone)

        print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥: {code}")
        try:
            await client.sign_in(config.telegram_phone, code)
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            if "password" in str(e).lower() or "2fa" in str(e).lower():
                print(f"üîê –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–æ–ª—å 2FA")
                if password:
                    await client.sign_in(password=password)
                    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å 2FA —É—Å–ø–µ—à–Ω–∞!")
                else:
                    print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å 2FA, –Ω–æ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω")
                    await client.disconnect()
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                await client.disconnect()
                raise
    else:
        print("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")

    me = await client.get_me()
    print(f"üë§ –í–æ—à–ª–∏ –∫–∞–∫: {me.first_name} (ID: {me.id})")

    await client.disconnect()
    return True

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 quick_auth.py <code> [password]")
        sys.exit(1)

    code = sys.argv[1]
    password = sys.argv[2] if len(sys.argv) > 2 else None

    success = asyncio.run(quick_auth(code, password))
    sys.exit(0 if success else 1)
