name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio ruff

    - name: Lint with ruff
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        ruff check . --select=E9,F63,F7,F82 --output-format=github
        # Exit with warning on other issues (but don't fail the build)
        ruff check . --exit-zero --output-format=github

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term -v --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  smoke-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Smoke test - Config validation
      run: |
        python -c "from utils.config import Config; print('✓ Config loads successfully')"

    - name: Smoke test - Database initialization
      run: |
        python -c "from database.db import Database; db = Database(':memory:'); print('✓ Database initializes successfully')"

    - name: Smoke test - Import all modules
      run: |
        python -c "
        from services.news_processor import NewsProcessor
        from services.telegram_listener import TelegramListener
        from services.gemini_client import GeminiClient
        from services.embeddings import EmbeddingService
        from services.status_reporter import StatusReporter
        print('✓ All modules import successfully')
        "
